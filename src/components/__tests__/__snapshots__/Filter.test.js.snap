// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Filter /> can render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FilterGroup
    filter={
      Object {
        "join": "",
        "rules": Array [],
      }
    }
    onChange={[Function]}
    variableRegistry={Object {}}
    variableTypes={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="filter-group__join"
        >
          <DropDown
            className={null}
            onChange={[Function]}
            options={
              Array [
                "OR",
                "AND",
              ]
            }
            placeholder="{join}"
            value=""
          />
        </div>,
        <div
          className="filter-group__rules"
        >
          <sortableList
            axis="y"
            distance={0}
            getHelperDimensions={[Function]}
            hideSortableGhost={true}
            lockAxis="y"
            lockOffset="50%"
            lockToContainerEdges={false}
            onDeleteRule={[Function]}
            onSortEnd={[Function]}
            onUpdateRule={[Function]}
            pressDelay={0}
            pressThreshold={5}
            rules={Array []}
            shouldCancelStart={[Function]}
            transitionDuration={300}
            useDragHandle={true}
            useWindowAsScrollContainer={false}
            variableRegistry={Object {}}
          />
          <div
            className="filter-group__add"
          >
            <AddButton
              onAddRule={[Function]}
            />
          </div>
        </div>,
      ],
      "className": "filter-group",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <DropDown
            className={null}
            onChange={[Function]}
            options={
              Array [
                "OR",
                "AND",
              ]
            }
            placeholder="{join}"
            value=""
          />,
          "className": "filter-group__join",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": null,
            "onChange": [Function],
            "options": Array [
              "OR",
              "AND",
            ],
            "placeholder": "{join}",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <sortableList
              axis="y"
              distance={0}
              getHelperDimensions={[Function]}
              hideSortableGhost={true}
              lockAxis="y"
              lockOffset="50%"
              lockToContainerEdges={false}
              onDeleteRule={[Function]}
              onSortEnd={[Function]}
              onUpdateRule={[Function]}
              pressDelay={0}
              pressThreshold={5}
              rules={Array []}
              shouldCancelStart={[Function]}
              transitionDuration={300}
              useDragHandle={true}
              useWindowAsScrollContainer={false}
              variableRegistry={Object {}}
            />,
            <div
              className="filter-group__add"
            >
              <AddButton
                onAddRule={[Function]}
              />
            </div>,
          ],
          "className": "filter-group__rules",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "axis": "y",
              "distance": 0,
              "getHelperDimensions": [Function],
              "hideSortableGhost": true,
              "lockAxis": "y",
              "lockOffset": "50%",
              "lockToContainerEdges": false,
              "onDeleteRule": [Function],
              "onSortEnd": [Function],
              "onUpdateRule": [Function],
              "pressDelay": 0,
              "pressThreshold": 5,
              "rules": Array [],
              "shouldCancelStart": [Function],
              "transitionDuration": 300,
              "useDragHandle": true,
              "useWindowAsScrollContainer": false,
              "variableRegistry": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <AddButton
                onAddRule={[Function]}
              />,
              "className": "filter-group__add",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onAddRule": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="filter-group__join"
          >
            <DropDown
              className={null}
              onChange={[Function]}
              options={
                Array [
                  "OR",
                  "AND",
                ]
              }
              placeholder="{join}"
              value=""
            />
          </div>,
          <div
            className="filter-group__rules"
          >
            <sortableList
              axis="y"
              distance={0}
              getHelperDimensions={[Function]}
              hideSortableGhost={true}
              lockAxis="y"
              lockOffset="50%"
              lockToContainerEdges={false}
              onDeleteRule={[Function]}
              onSortEnd={[Function]}
              onUpdateRule={[Function]}
              pressDelay={0}
              pressThreshold={5}
              rules={Array []}
              shouldCancelStart={[Function]}
              transitionDuration={300}
              useDragHandle={true}
              useWindowAsScrollContainer={false}
              variableRegistry={Object {}}
            />
            <div
              className="filter-group__add"
            >
              <AddButton
                onAddRule={[Function]}
              />
            </div>
          </div>,
        ],
        "className": "filter-group",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <DropDown
              className={null}
              onChange={[Function]}
              options={
                Array [
                  "OR",
                  "AND",
                ]
              }
              placeholder="{join}"
              value=""
            />,
            "className": "filter-group__join",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": null,
              "onChange": [Function],
              "options": Array [
                "OR",
                "AND",
              ],
              "placeholder": "{join}",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <sortableList
                axis="y"
                distance={0}
                getHelperDimensions={[Function]}
                hideSortableGhost={true}
                lockAxis="y"
                lockOffset="50%"
                lockToContainerEdges={false}
                onDeleteRule={[Function]}
                onSortEnd={[Function]}
                onUpdateRule={[Function]}
                pressDelay={0}
                pressThreshold={5}
                rules={Array []}
                shouldCancelStart={[Function]}
                transitionDuration={300}
                useDragHandle={true}
                useWindowAsScrollContainer={false}
                variableRegistry={Object {}}
              />,
              <div
                className="filter-group__add"
              >
                <AddButton
                  onAddRule={[Function]}
                />
              </div>,
            ],
            "className": "filter-group__rules",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "axis": "y",
                "distance": 0,
                "getHelperDimensions": [Function],
                "hideSortableGhost": true,
                "lockAxis": "y",
                "lockOffset": "50%",
                "lockToContainerEdges": false,
                "onDeleteRule": [Function],
                "onSortEnd": [Function],
                "onUpdateRule": [Function],
                "pressDelay": 0,
                "pressThreshold": 5,
                "rules": Array [],
                "shouldCancelStart": [Function],
                "transitionDuration": 300,
                "useDragHandle": true,
                "useWindowAsScrollContainer": false,
                "variableRegistry": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <AddButton
                  onAddRule={[Function]}
                />,
                "className": "filter-group__add",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onAddRule": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
